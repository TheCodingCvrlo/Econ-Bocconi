##### ECONOMETRICS ASSIGNMENT Y21/22 ####

# Giovanni Gatti - 3121689
# Antonio Ventura - 3127698
# Carlo Antonio Patti - 3134395


########################################### TAYLOR RULE IN AUSTRALIA ####################################################

# Clearing the workspace
rm(list=ls())

# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
current_dir = dirname(current_path)

setwd(current_dir )


# installing / importing libraries
# install.packages('tseries')
# install.packages('tidyverse')
library(ggplot2)
library(lmtest)
library(tseries)
library(tidyverse)



##################################### DATA PREPARATION ####################################

# importing data

output <- read.csv(paste(dirname(current_path),'australia_gdp.csv',sep = '/'))
rates <- read.csv(paste(dirname(current_path),'st_int.csv',sep = '/'))
inflation <- read.csv(paste(dirname(current_path),'inflation.csv',sep = '/'))
out_gap <- read.csv(paste(dirname(current_path),'output_gap.csv',sep = '/'))
unemp <- read.csv(paste(dirname(current_path),'unemployment.csv',sep = '/'))
exchange_rate <- read.csv(paste(dirname(current_path),'exchange_rate.csv',sep = '/'))
USreal_rate <- read.csv(paste(dirname(current_path),'US_real_rate_.csv',sep = '/'))
US10bond <- read.csv(paste(dirname(current_path),'US10y_bond.csv',sep = '/'))
PPI_commodities <- read.csv(paste(dirname(current_path),'PPI_commodities.csv',sep = '/')) #Average Annual Producer Price Index (All Commodities)



#renaming columns
colnames(inflation) <- c('YEAR', 'INF')
colnames(output) <- c('YEAR', 'GDP')
colnames(rates) <- c('YEAR', 'RATE')
colnames(out_gap) <- c('YEAR', 'GAP')
colnames(unemp) <- c('YEAR', 'UNR')
colnames(exchange_rate) <- c('YEAR', 'EXC')
colnames(USreal_rate) <- c('YEAR', 'RRATE')
colnames(US10bond) <- c('YEAR', 'YIELD')
colnames(PPI_commodities) <- c('YEAR', 'PPI')




# rescaling GDP (from USD to Billion USD)
output$GDP = output$GDP/1000000000     # DO NOT RUN TWICE



#merging data in one dataframe
df <- list(rates, output, inflation, out_gap,unemp,exchange_rate, USreal_rate, US10bond, PPI_commodities)
df = df %>% reduce(full_join, by = 'YEAR')
df = df[order(df$YEAR),]


################################## MODEL #######################################

#  i_t = b1 + b2* pi_t + b3* y_t + eps

# DEPENDENT VARIABLE

# i_t - policy rate in Australia in year t

# INDEPENDENT VARIABLES

# pi_t - inflation (CPI percentage change) from year t to year t+1
# y_t - output (GDP) in year t

#INTERCEPT

# b1 captures equilibrium interest rate, inflation target and any other deviation in the mean of our model


############################# PLOTTING RAW DATA #########################################

# GDP/YEAR
ggplot(output, aes(x = YEAR, y  = GDP)) + 
  geom_point() + 
  labs(
    title = 'Australian GDP 1980-2021',
    x = ''
  ) +
  stat_smooth(method = 'lm', formula = y~x, alpha = 0.2)

# POLICY RATE/YEAR
ggplot(rates, aes(x = YEAR, y  = RATE)) + 
  geom_point() + 
  labs(
    title = 'Policy Rates 1980-2020',
    x = '',
    y = 'Interest Rate'
  ) +
  stat_smooth(method = 'lm', formula = y~x)

# INFLATION/YEAR
ggplot(inflation, aes(x = YEAR, y  = INF)) + 
  geom_point() + 
  labs(
    title = 'CPI-measured Inflation 1980-2020',
    x = '',
    y = 'Inflation Rate (%)'
  ) +
  stat_smooth(method = 'lm', formula = y~x)

#OUT GAP/ YEAR
ggplot(out_gap, aes(x = YEAR, y  = GAP)) + 
  geom_point() + 
  labs(
    title = 'Output Gap as % of Potential Output',
    x = '',
    y = 'Output Gap'
  ) +
  geom_smooth(formula = y~x, alpha = 0)



################################ OLS ESTIMATION ######################################


# setting cutoff(output gap data available from 1985 onwards)
df_short = df[df$YEAR > 1984,]

# fitting the model
taylor_reg <- lm(RATE ~ GAP + INF, data = df)
summary(taylor_reg)


#3d plot of linear regression
#install.packages("reshape2")
#install.packages("plotly")

library(plotly)
library(reshape2)

#Graph Resolution 
graph_reso <- 0.05

#Setup Axis
axis_x <- seq(min(df_short$GAP), max(df_short$GAP), by = graph_reso)
axis_y <- seq(min(df_short$INF), max(df_short$INF), by = graph_reso)

#Sample points
taylor_reg_surface <- expand.grid(GAP = axis_x,INF = axis_y,KEEP.OUT.ATTRS = F)
taylor_reg_surface$RATE <- predict.lm(taylor_reg, newdata = taylor_reg_surface)
taylor_reg_surface <- acast(taylor_reg_surface, INF ~ GAP, value.var = "RATE") #y ~ x

hcolors=c("black","black","black")
iris_plot <- plot_ly(df_short, 
                     x = ~GAP, 
                     y = ~INF, 
                     z = ~RATE,
                     type = "scatter3d", 
                     mode = "markers",
                     marker = list(color = hcolors))
iris_plot <- add_trace(p = iris_plot,
                       z = taylor_reg_surface,
                       x = axis_x,
                       y = axis_y,
                       type = "surface")

iris_plot



#plotting fitted vs true values
ggplot(df_short) + 
  aes(x = YEAR) + 
  geom_point(aes(y = RATE)) + 
  geom_point(aes(y = fitted(taylor_reg)),color = 'red')

#plotting density of residuals
res <- residuals(taylor_reg)
res = data.frame(res)
res$ind = rep(1:36)

ggplot(res) +
  aes(x = res) + 
  geom_histogram(aes(y = stat(count) / sum(count)), colour = 'black', fill = 'white',bins = 10) + 
  geom_density(alpha = .3, fill = "#FF6666",size = 1) + 
  labs(
    title = 'Residuals',
    x = 'Residual Value',
    y = 'Relative Frequency'
  )

############################ TESTING MODEL ASSUMPTIONS ################################

# TESTING FOR LINEARITY OF PARAMETERS
resettest(taylor_reg,power = 2, type="fitted") # 2nd power significant?
resettest(taylor_reg,power = 3, type="fitted")

# TESTING FOR NORMALITY OF RESIDUALS
jarque.bera.test(residuals(taylor_reg))     
#H0 is accepted with pval = 0.1991


# TESTING FOR HETEROSCEDASTICITY
# preliminary analysis: plotting residuals (ordered by year)
ggplot(data = res) + 
  aes(y = res, x = ind) + 
  geom_point() + 
  stat_smooth(method = 'lm', alpha = 0, formula = y~x)

#visual inspection suggesting downward trend, decreasing variance

#Goldfeld-Quandt test

# with point = 0.2
gqtest(taylor_reg, point = 0.2, alternative = 'less',order.by = df_short$GAP)
gqtest(taylor_reg, point = 0.2, alternative = 'less',order.by = df_short$INF)
gqtest(taylor_reg, point = 0.2, alternative = 'less',order.by = df_short$YEAR)

# with point = 0.4
gqtest(taylor_reg, point = 0.4, alternative = 'less',order.by = df_short$GAP)
gqtest(taylor_reg, point = 0.4, alternative = 'less',order.by = df_short$INF)
gqtest(taylor_reg, point = 0.4, alternative = 'less',order.by = df_short$YEAR)

#POINT = 0.4
#H0 is strongly rejected: we may have a problem of heteroscedasticity

#since by Jarque-Bera test (see above) normality hold, we can also try the BP test:
#Breush-Pagan Test (taking output & inflation into consideration)
bptest(taylor_reg) # varformula = output + inflation

# TESTING FOR CORRELATION OF RESIDUALS

# Durbin-Watson test for serial correlation 
dwtest(taylor_reg)

# Breusch-Godfrey test for serial correlation of order up to 3
bgtest(taylor_reg, 3)

# DW test strongly rejects H0,
# BG test (m = 3) rejects H0 down to alpha = 0.008

# Strong indicators of serial correlation hint to a likely problem of omitted variables.
# ...hence we proceed to extend the model.





############################## EXTENDING THE MODEL ###############################

# Additional Regressors:
#1. Unemployment Rate
#2. USD/AUD Exchange Rate
#3. Avg Commodity Price Index
#4. Foreign Interest Rates (US)
#5. US 10-Year Treasury Rate

# DESCRIPTIVE STATISTICS

# Introduction of the 'UNEMPLOYMENT' regressor

#Plotting the data
ggplot(unemp, aes(x = YEAR, y  = UNR)) + 
  geom_point() + 
  labs(
    title = 'Australian Unemployment rate 1985-2020',
    x = ''
  ) +
  stat_smooth(method = 'lm', formula = y~x, alpha = 0)


# Introduction of the 'U.S. DOLLARS TO AUSTRALIAN DOLLARS SPOT EXCHANGE RATES' regressor

#Plotting the data
ggplot(exchange_rate, aes(x = YEAR, y  = EXC)) + 
  geom_point() + 
  labs(
    title = 'U.S. Dollars to Australian Dollar Spot Exchange Rate 1985-2020',
    x = ''
  ) +
  stat_smooth(method = 'lm', formula = y~x, alpha = 0)


# Introduction of the 'AVERAGE ANNUAL PRODUCER PRICE INDEX (All Commodities)' regressor

#Plotting the data
ggplot(PPI_commodities, aes(x = YEAR, y  = PPI)) + 
  geom_point() + 
  labs(
    title = 'Average Commodity Price Index ($A) 1985-2020',
    x = ''
  ) +
  stat_smooth(method = 'lm', formula = y~x, alpha = 0.2)






##################### FEATURE SELECTION #########################


df_long = df[c('YEAR','RATE','GDP','INF','UNR','EXC','RRATE','YIELD','PPI')]
df_long = df_long[df_long$YEAR > 1967,]


# Backwards vs Forward vs StepWise selection

library(MASS)

#fitting empty and full model
taylor_full <- lm(RATE ~ GDP + PPI + INF + UNR  + YIELD + EXC + RRATE, data = df_long)
taylor_empty = lm(RATE ~ 1, data = df_long)

#performing all three selections
stepAIC(taylor_full,direction = 'both') 
stepAIC(taylor_full, direction = 'backward')
stepAIC(taylor_empty, direction = 'forward',scope = ~ GDP + PPI + INF + UNR  + YIELD + EXC + RRATE)

#in all three cases, the optimal set of regressors seems to be:
# INF, YIELD, EXC, RRATE

taylor_opt = lm(RATE ~ INF + YIELD + EXC + RRATE, data = df_long)
summary(taylor_opt)

######################### TESTING OPTIMIZED MODEL ####################

# TESTING FOR LINEARITY OF PARAMETERS
resettest(taylor_opt,power = 2:3, type="fitted") #OK

# TESTING FOR NORMALITY OF RESIDUALS
res2 <- residuals(taylor_opt)
res2 = data.frame(res2)
res2$ind = rep(1:53)


ggplot(res2) +
  aes(x = res2) + 
  geom_histogram(aes(y = stat(count) / sum(count)), colour = 'black', fill = 'white',bins = 10) + 
  geom_density(alpha = .3, fill = "#FF6666",size = 1) + 
  labs(
    title = 'Residuals',
    x = 'Residual Value',
    y = 'Relative Frequency'
  )

jarque.bera.test(residuals(taylor_opt)) #REJECTED


# TESTING FOR HETEROSCEDASTICITY
# preliminary analysis: plotting residuals (ordered by year)
ggplot(data = res2) + 
  aes(y = res2, x = ind) + 
  geom_point() + 
  stat_smooth(method = 'lm', alpha = 0, formula = y~x)

#Goldfeld-Quandt test

# with point = 0.2
gqtest(taylor_opt, point = 0.2, alternative = 'greater',order.by = df_long$YIELD) #PROBLEM
gqtest(taylor_opt, point = 0.2, alternative = 'greater',order.by = df_long$INF) #PROBLEM
gqtest(taylor_opt, point = 0.2, alternative = 'less',order.by = df_long$YEAR)
gqtest(taylor_opt, point = 0.2, alternative = 'greater',order.by = df_long$EXC)
gqtest(taylor_opt, point = 0.2, alternative = 'greater',order.by = df_long$RRATE)

#since by BP test (see above) normality does NOT hold, we cannnot try the BP test:


# TESTING FOR CORRELATION OF RESIDUALS

# Durbin-Watson test for serial correlation 
dwtest(taylor_opt) # PROBLEM


# Breusch-Godfrey test for serial correlation of order up to 3
bgtest(taylor_opt, 3) #PROBLEM


# even with more regressors, there still is a problem of serial correlation,
# likely to be of order 2/3

######################### DYNAMIC VERSION ####################################


# Adding lagged interest rates to the dataframe
# IMPORTANT: The first term is simply set to the same year's value
rr = df['RATE']
rr_shifted <- c(rr$RATE[1],rr$RATE[1:length(rr$RATE) -1 ])
df$SHIFTED_RATE <- rr_shifted

df_dyn = df[c('YEAR','RATE','SHIFTED_RATE','GAP','INF')]
df_dyn = df_dyn[df_dyn$YEAR > 1984,]


reg_dynamic <- lm(RATE ~ SHIFTED_RATE + GAP + INF, data = df_dyn)
summary(reg_dynamic)



# TESTING FOR AUTOCORRELATION
# IMPORTANT: DO NOT USE DW TEST (not consistent for dynamic models)
bgtest(reg_dynamic, 3)

# introducing lagged interest rates seems to solve any problem of
# autocorrelation up to order 3

# TESTING FOR LINEARITY OF PARAMETERS
resettest(reg_dynamic, power = 2)
resettest(reg_dynamic, power = 3) #problem

#TESTING FOR NORMALITY OF RESIDUALS
jarque.bera.test(residuals(reg_dynamic)) #problem

#TESTING FOR HOMOSCEDASTICITY
gqtest(reg_dynamic, point = 0.2, alternative = 'less',order.by = df_dyn$YEAR)
gqtest(reg_dynamic, point = 0.2, alternative = 'greater',order.by = df_dyn$GAP)
gqtest(reg_dynamic, point = 0.2, alternative = 'greater',order.by = df_dyn$INF)




####################### EXTRA - FOR VISUALIZATION PURPOSES IN THE PRESENTATION #######################


#analysis of correlation of regressors

#install.packages("corrplot")
library(corrplot)

png(file="corr.png", res=300, width=2500, height=2500)
corrplot(cor(df_short))
dev.off()


heatmap(x = cor(df_short), symm = TRUE)

